/* @preserve
* @esri/arcgis-rest-geocoding - v4.0.1 - Apache-2.0
* Copyright (c) 2017-2022 Esri, Inc.
* Wed May 11 2022 17:55:21 GMT+0000 (Coordinated Universal Time)
*/
import{request as e,appendCustomParams as t,cleanUrl as r}from"@esri/arcgis-rest-request";const n="https://geocode-api.arcgis.com/arcgis/rest/services/World/GeocodeServer/",o="https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/";function i(t){const r=t&&t.endpoint||n,o=Object.assign({httpMethod:"GET",maxUrlLength:2e3},t);return e(r,o)}
/* @preserve
* @terraformer/arcgis - v2.0.7 - MIT
* Copyright (c) 2012-2021 Environmental Systems Research Institute, Inc.
* Thu Jul 22 2021 13:58:30 GMT-0700 (Pacific Daylight Time)
*/var s=function(e,t,r,n){var o=(n[0]-r[0])*(e[1]-r[1])-(n[1]-r[1])*(e[0]-r[0]),i=(t[0]-e[0])*(e[1]-r[1])-(t[1]-e[1])*(e[0]-r[0]),s=(n[1]-r[1])*(t[0]-e[0])-(n[0]-r[0])*(t[1]-e[1]);if(0!==s){var a=o/s,c=i/s;if(a>=0&&a<=1&&c>=0&&c<=1)return!0}return!1},a=function(e,t){for(var r=0;r<e.length-1;r++)for(var n=0;n<t.length-1;n++)if(s(e[r],e[r+1],t[n],t[n+1]))return!0;return!1},c=function(e){for(var t,r=0,n=0,o=e.length,i=e[n];n<o-1;n++)r+=((t=e[n+1])[0]-i[0])*(t[1]+i[1]),i=t;return r>=0},u=function(e,t){var r=a(e,t),n=function(e,t){for(var r=!1,n=-1,o=e.length,i=o-1;++n<o;i=n)(e[n][1]<=t[1]&&t[1]<e[i][1]||e[i][1]<=t[1]&&t[1]<e[n][1])&&t[0]<(e[i][0]-e[n][0])*(t[1]-e[n][1])/(e[i][1]-e[n][1])+e[n][0]&&(r=!r);return r}(e,t[0]);return!(r||!n)},p=function e(t,r){var n={};if(t.features){n.type="FeatureCollection",n.features=[];for(var o=0;o<t.features.length;o++)n.features.push(e(t.features[o],r))}if("number"==typeof t.x&&"number"==typeof t.y&&(n.type="Point",n.coordinates=[t.x,t.y],"number"==typeof t.z&&n.coordinates.push(t.z)),t.points&&(n.type="MultiPoint",n.coordinates=t.points.slice(0)),t.paths&&(1===t.paths.length?(n.type="LineString",n.coordinates=t.paths[0].slice(0)):(n.type="MultiLineString",n.coordinates=t.paths.slice(0))),t.rings&&(n=function(e){for(var t,r,n,o,i=[],s=[],p=0;p<e.length;p++){var f=(function(e,t){for(var r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}((o=e[p].slice(0))[0],o[o.length-1])||o.push(o[0]),o);if(!(f.length<4))if(c(f)){var l=[f.slice().reverse()];i.push(l)}else s.push(f.slice().reverse())}for(var d=[];s.length;){n=s.pop();var g=!1;for(t=i.length-1;t>=0;t--)if(r=i[t][0],u(r,n)){i[t].push(n),g=!0;break}g||d.push(n)}for(;d.length;){n=d.pop();var m=!1;for(t=i.length-1;t>=0;t--)if(r=i[t][0],a(r,n)){i[t].push(n),m=!0;break}m||i.push([n.reverse()])}return 1===i.length?{type:"Polygon",coordinates:i[0]}:{type:"MultiPolygon",coordinates:i}}(t.rings.slice(0))),"number"==typeof t.xmin&&"number"==typeof t.ymin&&"number"==typeof t.xmax&&"number"==typeof t.ymax&&(n.type="Polygon",n.coordinates=[[[t.xmax,t.ymax],[t.xmin,t.ymax],[t.xmin,t.ymin],[t.xmax,t.ymin],[t.xmax,t.ymax]]]),(t.geometry||t.attributes)&&(n.type="Feature",n.geometry=t.geometry?e(t.geometry):null,n.properties=t.attributes?function(e){var t={};for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r]);return t}(t.attributes):null,t.attributes))try{n.id=function(e,t){for(var r=t?[t,"OBJECTID","FID"]:["OBJECTID","FID"],n=0;n<r.length;n++){var o=r[n];if(o in e&&("string"==typeof e[o]||"number"==typeof e[o]))return e[o]}throw Error("No valid id attribute found")}(t.attributes,r)}catch(e){}return JSON.stringify(n.geometry)===JSON.stringify({})&&(n.geometry=null),t.spatialReference&&t.spatialReference.wkid&&4326!==t.spatialReference.wkid&&console.warn("Object converted in non-standard crs - "+JSON.stringify(t.spatialReference)),n};function f(o){let i,s={};return"string"==typeof o?(s.params={singleLine:o},i=n):(i=o.endpoint||n,s=t(o,["singleLine","address","address2","address3","neighborhood","city","subregion","region","postal","postalExt","countryCode","outFields","magicKey"],{params:Object.assign({},o.params)})),e(`${r(i)}/findAddressCandidates`,s).then((e=>{if("string"!=typeof o&&o.rawResponse)return e;const t=e.spatialReference;if(e.candidates.forEach((function(e){e.location.spatialReference=t,e.extent&&(e.extent.spatialReference=t)})),4326===t.wkid){const t=e.candidates.map((e=>({type:"Feature",geometry:p(e.location),properties:Object.assign({address:e.address,score:e.score},e.attributes)})));e.geoJson={type:"FeatureCollection",features:t}}return e}))}function l(t,o){const i=Object.assign({endpoint:n,params:{}},o);return i.params.text=t,e(`${r(i.endpoint)}/suggest`,i)}function d(t,o){const i=Object.assign({endpoint:n,params:{}},o);return!function(e){return 2===e.length||3===e.length}(t)?!function(e){return void 0!==e.latitude||void 0!==e.lat}(t)?i.params.location=t:(t.lat&&(i.params.location=t.long+","+t.lat),t.latitude&&(i.params.location=t.longitude+","+t.latitude)):i.params.location=t.join(),e(`${r(i.endpoint)}/reverseGeocode`,i)}function g(t){const n=Object.assign({endpoint:o,params:{}},t);return n.params.addresses={records:t.addresses.map((e=>({attributes:e})))},t.authentication||n.endpoint!==o?e(`${r(n.endpoint)}/geocodeAddresses`,n).then((e=>{if(n.rawResponse)return e;const t=e.spatialReference;return e.locations.forEach((function(e){e.location&&(e.location.spatialReference=t)})),e})):Promise.reject("bulk geocoding using the ArcGIS service requires authentication")}export{o as ARCGIS_ONLINE_BULK_GEOCODING_URL,n as ARCGIS_ONLINE_GEOCODING_URL,g as bulkGeocode,f as geocode,i as getGeocodeService,d as reverseGeocode,l as suggest};
//# sourceMappingURL=geocoding.esm.min.js.map

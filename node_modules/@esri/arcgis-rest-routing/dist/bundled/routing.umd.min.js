/* @preserve
* @esri/arcgis-rest-routing - v4.0.2 - Apache-2.0
* Copyright (c) 2017-2022 Esri, Inc.
* Wed Oct 19 2022 03:11:49 GMT+0000 (Coordinated Universal Time)
*/
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@esri/arcgis-rest-request")):"function"==typeof define&&define.amd?define(["exports","@esri/arcgis-rest-request"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).arcgisRest=e.arcgisRest||{},e.arcgisRest)}(this,(function(e,r){"use strict";const i="https://route.arcgis.com/arcgis/rest/services/World/Route/NAServer/Route_World",t="https://route.arcgis.com/arcgis/rest/services/World/ClosestFacility/NAServer/ClosestFacility_World",n="https://route.arcgis.com/arcgis/rest/services/World/ServiceAreas/NAServer/ServiceArea_World",s="https://route.arcgis.com/arcgis/rest/services/World/OriginDestinationCostMatrix/NAServer/OriginDestinationCostMatrix_World";function a(e){return e.map((e=>function(e){return 2===e.length||3===e.length}(e)?e.join():function(e){return void 0!==e.latitude||void 0!==e.lat}(e)?e.lat?e.long+","+e.lat:e.longitude+","+e.latitude:e.x+","+e.y))}function o(e){let r=0,i=0;const t=[];let n,s;const a=e.match(/((\+|-)[^+-]+)/g),o=parseInt(a[0],32);for(let e=1;e<a.length;e+=2)n=parseInt(a[e],32)+r,r=n,s=parseInt(a[e+1],32)+i,i=s,t.push([n/o,s/o]);return{paths:[t]}}function u(e){return Object.prototype.hasOwnProperty.call(e,"features")}function c(e){return"url"in e}
/* @preserve
  * @terraformer/arcgis - v2.0.7 - MIT
  * Copyright (c) 2012-2021 Environmental Systems Research Institute, Inc.
  * Thu Jul 22 2021 13:58:30 GMT-0700 (Pacific Daylight Time)
  */var l=function(e,r,i,t){var n=(t[0]-i[0])*(e[1]-i[1])-(t[1]-i[1])*(e[0]-i[0]),s=(r[0]-e[0])*(e[1]-i[1])-(r[1]-e[1])*(e[0]-i[0]),a=(t[1]-i[1])*(r[0]-e[0])-(t[0]-i[0])*(r[1]-e[1]);if(0!==a){var o=n/a,u=s/a;if(o>=0&&o<=1&&u>=0&&u<=1)return!0}return!1},p=function(e,r){for(var i=0;i<e.length-1;i++)for(var t=0;t<r.length-1;t++)if(l(e[i],e[i+1],r[t],r[t+1]))return!0;return!1},f=function(e){for(var r,i=0,t=0,n=e.length,s=e[t];t<n-1;t++)i+=((r=e[t+1])[0]-s[0])*(r[1]+s[1]),s=r;return i>=0},g=function(e,r){var i=p(e,r),t=function(e,r){for(var i=!1,t=-1,n=e.length,s=n-1;++t<n;s=t)(e[t][1]<=r[1]&&r[1]<e[s][1]||e[s][1]<=r[1]&&r[1]<e[t][1])&&r[0]<(e[s][0]-e[t][0])*(r[1]-e[t][1])/(e[s][1]-e[t][1])+e[t][0]&&(i=!i);return i}(e,r[0]);return!(i||!t)},d=function e(r,i){var t={};if(r.features){t.type="FeatureCollection",t.features=[];for(var n=0;n<r.features.length;n++)t.features.push(e(r.features[n],i))}if("number"==typeof r.x&&"number"==typeof r.y&&(t.type="Point",t.coordinates=[r.x,r.y],"number"==typeof r.z&&t.coordinates.push(r.z)),r.points&&(t.type="MultiPoint",t.coordinates=r.points.slice(0)),r.paths&&(1===r.paths.length?(t.type="LineString",t.coordinates=r.paths[0].slice(0)):(t.type="MultiLineString",t.coordinates=r.paths.slice(0))),r.rings&&(t=function(e){for(var r,i,t,n,s=[],a=[],o=0;o<e.length;o++){var u=(function(e,r){for(var i=0;i<e.length;i++)if(e[i]!==r[i])return!1;return!0}((n=e[o].slice(0))[0],n[n.length-1])||n.push(n[0]),n);if(!(u.length<4))if(f(u)){var c=[u.slice().reverse()];s.push(c)}else a.push(u.slice().reverse())}for(var l=[];a.length;){t=a.pop();var d=!1;for(r=s.length-1;r>=0;r--)if(i=s[r][0],g(i,t)){s[r].push(t),d=!0;break}d||l.push(t)}for(;l.length;){t=l.pop();var y=!1;for(r=s.length-1;r>=0;r--)if(i=s[r][0],p(i,t)){s[r].push(t),y=!0;break}y||s.push([t.reverse()])}return 1===s.length?{type:"Polygon",coordinates:s[0]}:{type:"MultiPolygon",coordinates:s}}(r.rings.slice(0))),"number"==typeof r.xmin&&"number"==typeof r.ymin&&"number"==typeof r.xmax&&"number"==typeof r.ymax&&(t.type="Polygon",t.coordinates=[[[r.xmax,r.ymax],[r.xmin,r.ymax],[r.xmin,r.ymin],[r.xmax,r.ymin],[r.xmax,r.ymax]]]),(r.geometry||r.attributes)&&(t.type="Feature",t.geometry=r.geometry?e(r.geometry):null,t.properties=r.attributes?function(e){var r={};for(var i in e)e.hasOwnProperty(i)&&(r[i]=e[i]);return r}(r.attributes):null,r.attributes))try{t.id=function(e,r){for(var i=r?[r,"OBJECTID","FID"]:["OBJECTID","FID"],t=0;t<i.length;t++){var n=i[t];if(n in e&&("string"==typeof e[n]||"number"==typeof e[n]))return e[n]}throw Error("No valid id attribute found")}(r.attributes,i)}catch(e){}return JSON.stringify(t.geometry)===JSON.stringify({})&&(t.geometry=null),r.spatialReference&&r.spatialReference.wkid&&4326!==r.spatialReference.wkid&&console.warn("Object converted in non-standard crs - "+JSON.stringify(r.spatialReference)),t};function y(e){if(e.directions&&e.directions.length>0&&(e.directions=e.directions.map((e=>(e.features=e.features.map((e=>(e.geometry=o(e.compressedGeometry),e))),e)))),4326===e.routes.spatialReference.wkid){const r=e.routes.features.map((e=>({type:"Feature",geometry:d(e.geometry),properties:Object.assign({},e.attributes)})));e.routes.geoJson={type:"FeatureCollection",features:r}}return e}function m(e){return 4326===e.routes.spatialReference.wkid&&(e.routes.geoJson=d(e.routes)),e}function h(e){return delete e.saPolygons.fieldAliases,4326===e.saPolygons.spatialReference.wkid&&(e.saPolygons.geoJson=d(e.saPolygons)),e}e.ARCGIS_ONLINE_CLOSEST_FACILITY_URL=t,e.ARCGIS_ONLINE_ORIGIN_DESTINATION_MATRIX_URL=s,e.ARCGIS_ONLINE_ROUTING_URL=i,e.ARCGIS_ONLINE_SERVICE_AREA_URL=n,e.closestFacility=function(e){const i=e.endpoint||t;e.params=Object.assign({returnFacilities:!0,returnDirections:!0,returnIncidents:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0,preserveObjectID:!0},e.params);const n=r.appendCustomParams(e,["returnCFRoutes","barriers","polylineBarriers","polygonBarriers","returnDirections","directionsOutputType","directionsLengthUnits","outputLines","returnFacilities","returnIncidents","returnBarriers","returnPolylineBarriers","returnPolygonBarriers","preserveObjectID"]);return e.travelDirection&&(n.params.travelDirection="incidentsToFacilities"===e.travelDirection?"esriNATravelDirectionFromFacility":"esriNATravelDirectionToFacility"),e.authentication||i!==t?(u(e.incidents)||c(e.incidents)?n.params.incidents=e.incidents:n.params.incidents=a(e.incidents).join(";"),u(e.facilities)||c(e.facilities)?n.params.facilities=e.facilities:n.params.facilities=a(e.facilities).join(";"),e.barriers&&(u(e.barriers)?n.params.barriers=e.barriers:n.params.barriers=a(e.barriers).join(";")),r.request(`${r.cleanUrl(i)}/solveClosestFacility`,n).then(m)):Promise.reject("Finding the closest facility using the ArcGIS service requires authentication")},e.decompressGeometry=o,e.isFeatureSet=u,e.isJsonWithURL=c,e.normalizeLocationsList=a,e.originDestinationMatrix=function(e){const i=e.endpoint||s;e.params=Object.assign({outputType:"esriNAODOutputSparseMatrix",returnOrigins:!0,returnDestinations:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0},e.params);const t=r.appendCustomParams(e,["outputType","barriers","polylineBarriers","polygonBarriers","returnOrigins","returnDestinations","returnBarriers","returnPolylineBarriers","returnPolygonBarriers"]);return e.authentication||i!==s?(u(e.origins)?t.params.origins=e.origins:t.params.origins=a(e.origins).join(";"),u(e.destinations)?t.params.destinations=e.destinations:t.params.destinations=a(e.destinations).join(";"),e.barriers&&(u(e.barriers)?t.params.barriers=e.barriers:t.params.barriers=a(e.barriers).join(";")),r.request(`${r.cleanUrl(i)}/solveODCostMatrix`,t).then((function(e){return function(e,r){"esriNAODOutputStraightLines"===r.params.outputType&&e.odLines&&4326===e.odLines.spatialReference.wkid&&(e.odLines.geoJson=d(e.odLines));e.origins&&4326===e.origins.spatialReference.wkid&&(e.origins.geoJson=d(e.origins));e.destinations&&4326===e.destinations.spatialReference.wkid&&(e.destinations.geoJson=d(e.destinations));e.barriers&&4326===e.barriers.spatialReference.wkid&&(e.barriers.geoJson=d(e.barriers));e.polygonBarriers&&4326===e.polygonBarriers.spatialReference.wkid&&(e.polygonBarriers.geoJson=d(e.polygonBarriers));e.polylineBarriers&&4326===e.polylineBarriers.spatialReference.wkid&&(e.polylineBarriers.geoJson=d(e.polylineBarriers));return e}(e,t)}))):Promise.reject("Calculating the origin-destination cost matrix using the ArcGIS service requires authentication")},e.serviceArea=function(e){const i=e.endpoint||n;e.params=Object.assign({returnFacilities:!0,returnBarriers:!0,returnPolylineBarriers:!0,returnPolygonBarriers:!0,preserveObjectID:!0},e.params);const t=r.appendCustomParams(e,["barriers","polylineBarriers","polygonBarriers","outputLines","returnFacilities","returnBarriers","returnPolylineBarriers","returnPolygonBarriers","preserveObjectID"]);return e.travelDirection&&(t.params.travelDirection="incidentsToFacilities"===e.travelDirection?"esriNATravelDirectionFromFacility":"esriNATravelDirectionToFacility"),e.authentication||i!==n?(u(e.facilities)?t.params.facilities=e.facilities:t.params.facilities=a(e.facilities).join(";"),e.barriers&&(u(e.barriers)?t.params.barriers=e.barriers:t.params.barriers=a(e.barriers).join(";")),r.request(`${r.cleanUrl(i)}/solveServiceArea`,t).then(h)):Promise.reject("Finding service areas using the ArcGIS service requires authentication")},e.solveRoute=function(e){const t=Object.assign({endpoint:e.endpoint||i,params:{}},e);if(!e.authentication&&t.endpoint===i)return Promise.reject("Routing using the ArcGIS service requires authentication");if(u(e.stops))t.params.stops=e.stops;else{const r=e.stops.map((e=>function(e){return 2===e.length||3===e.length}(e)?e.join():function(e){return void 0!==e.latitude||void 0!==e.lat}(e)?e.lat?e.long+","+e.lat+(e.z?","+e.z:""):e.longitude+","+e.latitude+(e.z?","+e.z:""):e.x+","+e.y+(e.z?","+e.z:"")));t.params.stops=r.join(";")}return r.request(`${r.cleanUrl(t.endpoint)}/solve`,t).then(y)},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=routing.umd.min.js.map
